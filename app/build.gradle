plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.devtools.ksp'
    id 'dagger.hilt.android.plugin'
    id 'io.realm.kotlin'
    id 'com.google.gms.google-services'
}

android {
    namespace 'com.lifo.calmifyapp'
    compileSdk ProjectConfig.compileSdk

    defaultConfig {
        applicationId "com.lifo.calmifyapp"
        minSdk ProjectConfig.minSdk
        targetSdk ProjectConfig.targetSdk

        versionCode 1
        versionName "1.0"

        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
        signingConfig signingConfigs.debug
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
        coreLibraryDesugaringEnabled true
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion ProjectConfig.extensionVersion
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    // Compose Navigation
    implementation libs.navigation.compose

    // Firebase
    implementation libs.firebase.storage

    // Room components
    implementation libs.room.runtime
    ksp libs.room.compiler
    implementation libs.room.ktx

    // Splash API
    implementation libs.splash.api

    // Mongo DB Realm
    implementation libs.realm.sync

    // Dagger Hilt
    implementation libs.hilt.android
    ksp libs.hilt.compiler

    // Desugar JDK
    coreLibraryDesugaring libs.desugar.jdk

    //TEST
    implementation libs.junit.ext
    implementation libs.junit
    implementation libs.compose.ui.test

    implementation(project(":core:ui"))
    implementation(project(":core:util"))
    implementation(project(":data:mongo"))
    implementation(project(":features:auth"))
    implementation(project(":features:home"))
    implementation(project(":features:write"))
}